{"version":3,"sources":["webpack:///./template/gallery-item-template.hbs","webpack:///./index.js"],"names":["Handlebars","__webpack_require__","module","exports","template","compiler","main","container","depth0","helpers","partials","data","helper","escapeExpression","largeImageURL","helperMissing","call","nullContext","name","hash","useData","searchForm","document","querySelector","imageContainer","input","nullReturn","addEventListener","e","preventDefault","infScrollInstance","pageIndex","innerHTML","style","height","loadNextPage","InfiniteScroll","path","value","this","history","responseType","status","on","response","innerText","display","markup","_JSON$parse","JSON","parse","hits","totalHits","map","image","galleryItemTemplate","join","imagesLoaded","Masonry","itemSelector","opacity"],"mappings":"gFAAA,IAAAA,EAAiBC,EAAQ,QAEzBC,EAAAC,SAAAH,EAAA,SAAAA,GAAAI,SAAA,CAAiEC,SAAA,eAAAC,KAAA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACjE,IAAAC,EAEA,kDACAL,EAAAM,iBAAA,mBAAAD,EAAA,OAAAA,EAAAH,EAAAK,gBAAA,MAAAN,IAAAM,cAAAN,IAAAI,EAAAH,EAAAM,eAAAH,EAAAI,KAAA,MAAAR,IAAAD,EAAAU,aAAA,GAA6Q,CAAGC,KAAA,gBAAAC,KAAA,GAAgCR,SAAaC,GAC7T,YACCQ,SAAA,uICDKC,aAAaC,SAASC,cAAc,iBACpCC,EAAiBF,SAASC,cAAc,YACxCE,EAAQH,SAASC,cAAc,uBAC/BG,EAAaJ,SAASC,cAAc,cAC7BD,SAASC,cAAc,QAiBpCF,EAAWM,iBAAiB,SAR5B,SAAsBC,GAClBA,EAAEC,iBAEFC,EAAkBC,UAAY,EAC1BP,EAAeQ,UAAU,GACzBR,EAAeS,MAAMC,OAAS,OAC9BJ,EAAkBK,iBAM1B,IAAML,EAAoB,IAAIM,IAAgBZ,EAAgB,CAC1Da,KAAK,WACD,+GAAgHZ,EAAMa,MAAtH,0BAAqJC,KAAKR,UAA1J,gBAEJS,SAAS,EACTC,aAAc,OACdC,OAAQ,mBASXZ,EAAkBa,GAAG,OAAQ,SAAAC,GAC1B,GAAmB,KAAhBnB,EAAMa,OAAgC,OAAhBb,EAAMa,MAE3B,OADAZ,EAAWmB,UAAY,sCAChBnB,EAAWO,MAAMa,QAAU,QAHA,IALhCC,EAKgCC,EAMVC,KAAKC,MAAMN,GAAhCO,EAN+BH,EAM/BG,KAEP,GAAiB,IARqBH,EAMxBI,UAIV,OADA1B,EAAWmB,UAAY,sCAChBnB,EAAWO,MAAMa,QAAU,QAfhCC,EAmBGI,EAnBaE,IAAK,SAAAC,GAAK,OAAIC,IAAoBD,KAAQE,KAAK,IACrEhC,EAAeQ,UAAf,IAA8BR,EAAeQ,UAAYe,GAoBzDU,aAAcjC,EAAgB,WAC1B,IAAIkC,QAAQlC,EAAgB,CACxBmC,aAAc,mBAEhBnC,EAAeS,MAAM2B,QAAU","file":"main.8617ef85376637ec35a0.js","sourcesContent":["var Handlebars = require(\"../../node_modules/handlebars/runtime.js\");\nfunction __default(obj) { return obj && (obj.__esModule ? obj[\"default\"] : obj); }\nmodule.exports = (Handlebars[\"default\"] || Handlebars).template({\"compiler\":[7,\">= 4.0.0\"],\"main\":function(container,depth0,helpers,partials,data) {\n    var helper;\n\n  return \"<li class=\\\"gallery__item\\\">\\n    <img src=\"\n    + container.escapeExpression(((helper = (helper = helpers.largeImageURL || (depth0 != null ? depth0.largeImageURL : depth0)) != null ? helper : helpers.helperMissing),(typeof helper === \"function\" ? helper.call(depth0 != null ? depth0 : (container.nullContext || {}),{\"name\":\"largeImageURL\",\"hash\":{},\"data\":data}) : helper)))\n    + \">\\n</li>\";\n},\"useData\":true});","import InfiniteScroll from 'infinite-scroll';\r\nimport galleryItemTemplate from './template/gallery-item-template.hbs';\r\n\r\n\r\nimport './styles.css';\r\n\r\n// REFS\r\nconst searchForm = document.querySelector('.search-form');\r\nconst imageContainer = document.querySelector('.gallery');\r\nconst input = document.querySelector('.search-form__input');\r\nconst nullReturn = document.querySelector('.no_return');\r\nconst body = document.querySelector('body');\r\n\r\n//добавляем сначала маркап а потом применяем на него мэйсонри\r\n\r\n\r\n\r\n\r\n// Вешаю сдушатель на сабмит\r\n\r\nfunction handleSubmit(e) {\r\n    e.preventDefault();\r\n \r\n    infScrollInstance.pageIndex = 1;\r\n        imageContainer.innerHTML='';\r\n        imageContainer.style.height = \"auto\"\r\n        infScrollInstance.loadNextPage();\r\n};\r\nsearchForm.addEventListener('submit', handleSubmit);\r\n\r\n// Initialize infinite-scroll\r\n\r\nconst infScrollInstance = new InfiniteScroll( imageContainer, {  \r\n    path:function() {\r\n        return `https://cors-anywhere.herokuapp.com/https://pixabay.com/api/?key=13083162-0136df30d1856527dad6bba93&q=${input.value}&image_type=photo&page=${this.pageIndex}&per_page=20`;\r\n    },\r\n    history: false,\r\n    responseType: 'text',\r\n    status: '.loader-ellips'\r\n});\r\n\r\nconst AddToDom = images => {\r\n    const markup = images.map( image => galleryItemTemplate(image)).join('');\r\n    imageContainer.innerHTML = `${imageContainer.innerHTML + markup}`\r\n }\r\n\r\n\r\n infScrollInstance.on('load', response => {\r\n    if(input.value === \"\" || input.value === null){\r\n        nullReturn.innerText = \"Пожалуйста введите слово для поиска\"\r\n        return nullReturn.style.display = \"block\"\r\n    }\r\n\r\n    const {hits , totalHits } = JSON.parse(response);\r\n\r\n    if(totalHits === 0){\r\n        nullReturn.innerText = \"Ничего не найдено по вашему запросу\"\r\n        return nullReturn.style.display = \"block\"\r\n    }\r\n\r\n \r\n    AddToDom(hits)\r\n\r\n    imagesLoaded( imageContainer, function() {\r\n        new Masonry(imageContainer, {\r\n            itemSelector: '.gallery__item'\r\n          });\r\n          imageContainer.style.opacity = 1\r\n      });\r\n\r\n});\r\n\r\n"],"sourceRoot":""}